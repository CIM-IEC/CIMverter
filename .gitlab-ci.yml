variables:
  DOCKER_TAG_DEV: ${CI_COMMIT_REF_NAME}
  DOCKER_IMAGE_DEV: cimverter-dev

stages:
  - prepare
  - test

# build the docker img in which we want to test. normally we want a dockerfile with all dependencies which we just include
docker:
  stage: prepare
  script:
    - docker build -t ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV} .
    - docker images
  only: 
    - release
    - master
  tags:
    - shell
# clone libcimpp in our projekt. compile and run the tests.
test: 
  stage: test
  image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV}
  tags:
    - docker

  before_script:
    - apt-get update -qq && apt-get install -y -qq git 
    - git --version
    - rm -rf libcimpp/
    - git clone --recursive https://${GITLAB_USERLIBCIMPP}:${GITLAB_TOKENLIBCIMPP}@git.rwth-aachen.de/acs/core/cim/cimpp/libcimpp.git/ libcimpp/
    - mkdir -p build && cd build
    - cmake .. -DUSE_CIM_VERSION:STRING=IEC61970_16v29a_SINERGIEN
    - make -j8

  script:
    - cd ../test/
    - ./testFiles.py
  only:
    - master 
    - release
